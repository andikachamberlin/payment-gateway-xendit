/*------------------------------------------------------------------
[ENV]
-------------------------------------------------------------------*/
require('dotenv').config()
/*------------------------------------------------------------------
[End ENV]
-------------------------------------------------------------------*/

/*------------------------------------------------------------------
[Node Module]
-------------------------------------------------------------------*/
const fs = require('fs');
const http = require('http');
const https = require('https');
const express = require('express');
/*------------------------------------------------------------------
[End Node Module]
-------------------------------------------------------------------*/

/*------------------------------------------------------------------
[Config]
-------------------------------------------------------------------*/
let privateKey = process.env.ENV_PRODUCTION == 'false' ? fs.readFileSync('./https/key.pem', 'utf8') : fs.readFileSync('./https/ssl.key', 'utf8');
let certificate = process.env.ENV_PRODUCTION == 'false' ? fs.readFileSync('./https/cert.pem', 'utf8') : fs.readFileSync('./https/ssl.crt', 'utf8');

const credentials = { key: privateKey, cert: certificate };

const { port_app, port_app_ssl } = require('./config/port');
/*------------------------------------------------------------------
[End Config]
-------------------------------------------------------------------*/

/*------------------------------------------------------------------
[Node Module Use]
-------------------------------------------------------------------*/
const app = express();
/*------------------------------------------------------------------
[End Node Module Use]
-------------------------------------------------------------------*/

/*------------------------------------------------------------------
[Body Parser]
-------------------------------------------------------------------*/
app.use(express.urlencoded({ extended: true, limit: "50mb" }));
app.use(express.json({ limit: "50mb" }));
/*------------------------------------------------------------------
[End Body Parser]
-------------------------------------------------------------------*/

/*------------------------------------------------------------------
[Folder Public]
-------------------------------------------------------------------*/
app.use(express.static('public'));
/*------------------------------------------------------------------
[End Folder Public]
-------------------------------------------------------------------*/

/*------------------------------------------------------------------
[Port]
-------------------------------------------------------------------*/
const httpServer = http.createServer(app);
const httpsServer = https.createServer(credentials, app);

httpServer.listen(port_app, () => {
	console.log('------------------------------------------------------------------')
	console.log('APP PORT HTTP  :', port_app)
	console.log('------------------------------------------------------------------')
});

httpsServer.listen(port_app_ssl, () => {
	console.log('------------------------------------------------------------------')
	console.log('APP PORT HTTPS :', port_app_ssl)
	console.log('------------------------------------------------------------------')
});
/*------------------------------------------------------------------
[End Port]
-------------------------------------------------------------------*/

/*------------------------------------------------------------------
[Mode]
-------------------------------------------------------------------*/
if (process.env.ENV_PRODUCTION == 'true') {
	console.log('------------------------------------------------------------------')
	console.log('APP PRODUCTION')
	console.log('------------------------------------------------------------------')
} else {
	console.log('------------------------------------------------------------------')
	console.log('APP DEVELOPMENT')
	console.log('------------------------------------------------------------------')
}
/*------------------------------------------------------------------
[End Mode]
-------------------------------------------------------------------*/

/*------------------------------------------------------------------
[Routes API V1.0]
-------------------------------------------------------------------*/
const api_get = require('./api/get');
const api_post = require('./api/post');

app.use('/api/get', api_get);
app.use('/api/post', api_post);
/*------------------------------------------------------------------
[End Routes API V1.0]
-------------------------------------------------------------------*/

/*------------------------------------------------------------------
[404]
-------------------------------------------------------------------*/
app.all('*', (request, response) => {
	response.send({
		code: 404,
		message: "Not Found"
	});
});
/*------------------------------------------------------------------
[End 404]
-------------------------------------------------------------------*/

/*------------------------------------------------------------------
[Error]
-------------------------------------------------------------------*/
app.use((error, request, response, next) => {
	if (error) {
		console.log(error);
		return response.send('Opps');
	}
	next();
});
/*------------------------------------------------------------------
[End Error]
-------------------------------------------------------------------*/
